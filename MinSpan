public static int  myfun()
        {
            mst(graph);

	        return 0;

        }
    public static int getmin(int wt[], bool isvisted[])
    {
        int minwt = INT_MAX;
        int minnode;
        for (int v = 0; v < V; ++v)
        {
            if (isvisted[v] == false && wt[v] < minwt)
            {
                minwt = wt[v];
                minnode = v;
            }

        }
        return minnode;

    }
    public static int mst(int graph[5][5])
    {
        int[] parent = new int[5];
        int[] wt = new int[5];
        bool isvisited[5];
        for (int v = 0; v < V; ++v)
        {
            isvisited[v] = false;
            wt[v] = INT_MAX;
        }

        wt[0] = 0;
        parent[0] = -1;


        for (int i = 0; i < V - 1; ++i)
        {

            int u = getmin(wt, isvisited);

            isvisited[u] = true;
            for (int j = 0; j < V; ++j)
            {
                if ((graph[u][j] > 0) && (isvisited[j] == false) && (graph[u][j] < wt[j]))
                {
                    parent[j] = u;
                    wt[j] = graph[u][j];
                }
            }

        }
        int sum = 0;
        for (int i = 1; i < V; ++i)
        {
            sum += wt[i];

            cout << parent[i] << "   " << i << "   " << wt[i] << endl;
        }
        cout << sum;
    }
